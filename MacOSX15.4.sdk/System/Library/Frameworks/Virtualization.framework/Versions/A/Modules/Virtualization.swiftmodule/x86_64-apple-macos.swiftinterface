// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.5 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-macos15.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 210.5.6 -module-name Virtualization
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import Swift
@_exported import Virtualization
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(macOS 11.0, *)
extension Virtualization.VZVirtualMachine {
  public func start(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  public func pause(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
  public func resume(completionHandler: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void)
}
@available(macOS 11.0, *)
extension Virtualization.VZVirtioSocketDevice {
  public func connect(toPort port: Swift.UInt32, completionHandler: @escaping (Swift.Result<Virtualization.VZVirtioSocketConnection, any Swift.Error>) -> Swift.Void)
}
