// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.5 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-macos15.4 -target-variant x86_64-apple-ios18.4-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 1325.500.161 -module-name IdentityLookup
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import CoreData
import ExtensionFoundation
import Foundation
@_exported import IdentityLookup
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
prefix operator >>
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public protocol LiveCallerIDLookupProtocol : ExtensionFoundation.AppExtension {
  var context: IdentityLookup.LiveCallerIDLookupExtensionContext { get }
}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public enum CallLookupExtensionStatus {
  case disabled
  case enabled
  public static func == (a: IdentityLookup.CallLookupExtensionStatus, b: IdentityLookup.CallLookupExtensionStatus) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public class LiveCallerIDLookupManager {
  public static let shared: IdentityLookup.LiveCallerIDLookupManager
  public func status(forExtensionWithIdentifier identifier: Swift.String) -> IdentityLookup.CallLookupExtensionStatus
  public func openSettings() async throws
  public func reset(forExtensionWithIdentifier identifier: Swift.String) async throws
  public func refreshPIRParameters(forExtensionWithIdentifier identifier: Swift.String) async throws
  @available(iOS 18.1, watchOS 11.1, visionOS 2.1, macCatalyst 18.1, macOS 15.1, *)
  public func refreshExtensionContext(forExtensionWithIdentifier identifier: Swift.String) async throws
  @objc deinit
}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public struct LiveCallerIDLookupExtensionContext : Swift.Hashable, Swift.Sendable, Swift.Codable {
  public let serviceURL: Foundation.URL
  public let tokenIssuerURL: Foundation.URL
  public let userTierToken: Foundation.Data
  public init(serviceURL: Foundation.URL, tokenIssuerURL: Foundation.URL, userTierToken: Foundation.Data)
  public static func == (a: IdentityLookup.LiveCallerIDLookupExtensionContext, b: IdentityLookup.LiveCallerIDLookupExtensionContext) -> Swift.Bool
  public func encode(to encoder: any Swift.Encoder) throws
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
  public init(from decoder: any Swift.Decoder) throws
}
@available(iOS 16.0, macCatalyst 16.0, *)
@available(macOS, unavailable)
extension IdentityLookup.ILMessageFilterCapabilitiesQueryResponse {
  @nonobjc final public var transactionalSubActions: [IdentityLookup.ILMessageFilterSubAction] {
    get
    set
  }
  final public var promotionalSubActions: [IdentityLookup.ILMessageFilterSubAction] {
    get
    set
  }
}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public let extensionPointName: Swift.String
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
extension IdentityLookup.LiveCallerIDLookupProtocol {
  public var configuration: some IdentityLookup.LiveCallerIDLookupExtensionConfiguration {
    get
  }
}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
public protocol LiveCallerIDLookupExtensionConfiguration : ExtensionFoundation.AppExtensionConfiguration {
}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
extension IdentityLookup.CallLookupExtensionStatus : Swift.Equatable {}
@available(iOS 18.0, watchOS 11.0, visionOS 2.0, macCatalyst 18.0, macOS 15.0, *)
extension IdentityLookup.CallLookupExtensionStatus : Swift.Hashable {}
