// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.5 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-macos15.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 531.101.1 -module-name FSKit
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import ExtensionFoundation
@_exported import FSKit
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(macOS 15.4, *)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
extension FSKit.FSFileName {
  @available(macOS 15.4, *)
  convenience public init(cString name: Swift.UnsafeBufferPointer<Swift.CChar>)
  @available(macOS 15.4, *)
  convenience public init(bytes name: Swift.UnsafeBufferPointer<Swift.CChar>)
}
@available(macOS 15.4, *)
extension FSKit.FSMutableFileDataBuffer {
  @available(macOS 15.4, *)
  public func withUnsafeMutableBytes<R, E>(_ body: (Swift.UnsafeMutableRawBufferPointer) throws(E) -> R) throws(E) -> R where E : Swift.Error
}
@available(macOS 15.4, *)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
extension FSKit.FSModuleIdentity : Swift.Identifiable {
  @available(macOS 15.4, *)
  public var id: Swift.String {
    get
  }
  @available(macOS 15.4, *)
  @available(iOS, unavailable)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  @available(visionOS, unavailable)
  public typealias ID = Swift.String
}
@available(macOS, unavailable)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
public protocol FileSystemExtension : ExtensionFoundation.AppExtension {
  associatedtype FileSystem : FSKit.FSFileSystem
  var fileSystem: Self.FileSystem { get }
}
@available(macOS, unavailable)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
extension FSKit.FileSystemExtension {
  public var configuration: some ExtensionFoundation.AppExtensionConfiguration {
    get
  }
}
@available(macOS 15.4, *)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
public protocol UnaryFileSystemExtension : ExtensionFoundation.AppExtension {
  associatedtype FileSystem : FSKit.FSUnaryFileSystem, FSKit.FSUnaryFileSystemOperations
  var fileSystem: Self.FileSystem { get }
}
@available(macOS 15.4, *)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
extension FSKit.UnaryFileSystemExtension {
  public var configuration: some ExtensionFoundation.AppExtensionConfiguration {
    get
  }
}
@available(macOS 15.4, *)
extension FSKit.FSVolume : Swift.Identifiable {
  @available(macOS 15.4, *)
  public var id: Swift.String {
    get
  }
  @available(macOS 15.4, *)
  public typealias ID = Swift.String
}
@available(macOS 15.4, *)
extension FSKit.FSEntityIdentifier : Swift.Identifiable, @unchecked Swift.Sendable {
  @available(macOS 15.4, *)
  public var id: Swift.String {
    get
  }
  @available(macOS 15.4, *)
  public typealias ID = Swift.String
}
@available(macOS 15.4, *)
@available(iOS, unavailable)
@available(watchOS, unavailable)
@available(tvOS, unavailable)
@available(visionOS, unavailable)
extension FSKit.FSBlockDeviceResource {
  @available(macOS 15.4, *)
  public func read(into buffer: Swift.UnsafeMutableRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) async throws -> Swift.Int
  @available(macOS 15.4, *)
  public func read(into buffer: Swift.UnsafeMutableRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int, completionHandler: @escaping (Swift.Int, (any Swift.Error)?) -> Swift.Void)
  @available(macOS 15.4, *)
  public func read(into buffer: Swift.UnsafeMutableRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) throws -> Swift.Int
  @available(macOS 15.4, *)
  public func write(from buffer: Swift.UnsafeRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) async throws -> Swift.Int
  @available(macOS 15.4, *)
  public func write(from buffer: Swift.UnsafeRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int, completionHandler: @escaping (Swift.Int, (any Swift.Error)?) -> Swift.Void)
  @available(macOS 15.4, *)
  public func write(from buffer: Swift.UnsafeRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) throws -> Swift.Int
  @available(macOS 15.4, *)
  public func metadataRead(into buffer: Swift.UnsafeMutableRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) throws
  @available(macOS 15.4, *)
  public func metadataWrite(from buffer: Swift.UnsafeRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) throws
  @available(macOS 15.4, *)
  public func delayedMetadataWrite(from buffer: Swift.UnsafeRawBufferPointer, startingAt offset: sys_types.off_t, length: Swift.Int) throws
}
