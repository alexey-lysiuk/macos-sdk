// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.5 clang-1700.0.13.3)
// swift-module-flags: -target arm64e-apple-ios18.4-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Osize -library-level api -enable-experimental-concurrency -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 4024.540.1 -module-name _MusicKit_SwiftUI
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import CoreGraphics
import Foundation
@_exported import MusicKit
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, visionOS 1.0, *)
@_Concurrency.MainActor @preconcurrency public struct ArtworkImage : SwiftUICore.View {
  nonisolated public init(_ artwork: MusicKit.Artwork, width: CoreFoundation.CGFloat, height: CoreFoundation.CGFloat)
  nonisolated public init(_ artwork: MusicKit.Artwork, width: CoreFoundation.CGFloat)
  nonisolated public init(_ artwork: MusicKit.Artwork, height: CoreFoundation.CGFloat)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 15.0, tvOS 15.0, watchOS 8.0, visionOS 1.0, macOS 12.0, *)
  public typealias Body = @_opaqueReturnTypeOf("$s17_MusicKit_SwiftUI12ArtworkImageV4bodyQrvp", 0) __
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
public struct MusicSubscriptionOffer {
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension SwiftUICore.View {
  nonisolated public func musicSubscriptionOffer(isPresented: SwiftUICore.Binding<Swift.Bool>, options: _MusicKit_SwiftUI.MusicSubscriptionOffer.Options = .default, onLoadCompletion: @escaping ((any Swift.Error)?) -> Swift.Void = { _ in }) -> some SwiftUICore.View
  
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer {
  public struct Action : Swift.RawRepresentable, Swift.Equatable, Swift.Hashable, Swift.Sendable {
    public init(_ rawValue: Swift.String)
    public init(rawValue: Swift.String)
    public let rawValue: Swift.String
    public static let subscribe: _MusicKit_SwiftUI.MusicSubscriptionOffer.Action
    @available(iOS 15.0, macOS 12.0, *)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    @available(visionOS, unavailable)
    public typealias RawValue = Swift.String
  }
  public struct MessageIdentifier : Swift.RawRepresentable, Swift.Equatable, Swift.Hashable, Swift.Sendable {
    public init(_ rawValue: Swift.String)
    public init(rawValue: Swift.String)
    public let rawValue: Swift.String
    public static let join: _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier
    public static let addMusic: _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier
    public static let playMusic: _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier
    @available(iOS 15.0, macOS 12.0, *)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    @available(visionOS, unavailable)
    public typealias RawValue = Swift.String
  }
  public struct Options : Swift.Sendable {
    public var action: _MusicKit_SwiftUI.MusicSubscriptionOffer.Action
    public var messageIdentifier: _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier
    public var itemID: MusicKit.MusicItemID?
    public var affiliateToken: Swift.String?
    public var campaignToken: Swift.String?
    public static let `default`: _MusicKit_SwiftUI.MusicSubscriptionOffer.Options
    public init(action: _MusicKit_SwiftUI.MusicSubscriptionOffer.Action = .subscribe, messageIdentifier: _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier = .join, itemID: MusicKit.MusicItemID? = nil, affiliateToken: Swift.String? = nil, campaignToken: Swift.String? = nil)
  }
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer.Options : Swift.Equatable {
  public static func == (a: _MusicKit_SwiftUI.MusicSubscriptionOffer.Options, b: _MusicKit_SwiftUI.MusicSubscriptionOffer.Options) -> Swift.Bool
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer.Options : Swift.Hashable {
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer.Options : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer.Action : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@available(iOS 15.0, macOS 12.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension _MusicKit_SwiftUI.MusicSubscriptionOffer.MessageIdentifier : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@available(iOS 15.0, macOS 12.0, tvOS 15.0, watchOS 8.0, visionOS 1.0, *)
extension _MusicKit_SwiftUI.ArtworkImage : Swift.Sendable {}
