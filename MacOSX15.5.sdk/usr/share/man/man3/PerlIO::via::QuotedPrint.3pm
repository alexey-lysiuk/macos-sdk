.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.42)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PerlIO::via::QuotedPrint 3pm"
.TH PerlIO::via::QuotedPrint 3pm "2022-02-19" "perl v5.34.1" "Perl Programmers Reference Guide"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
PerlIO::via::QuotedPrint \- PerlIO layer for quoted\-printable strings
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use PerlIO::via::QuotedPrint;
\&
\&    open(my $in, \*(Aq<:via(QuotedPrint)\*(Aq, \*(Aqfile.qp\*(Aq) or
\&        die "Can\*(Aqt open file.qp for reading: $!\en";
\&
\&    open(my $out, \*(Aq>:via(QuotedPrint)\*(Aq, \*(Aqfile.qp\*(Aq) or
\&        die "Can\*(Aqt open file.qp for writing: $!\en";
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements a PerlIO layer that works on files encoded in the
quoted-printable format.  It will decode from quoted-printable while reading
from a handle, and it will encode as quoted-printable while writing to a handle.
.SH "EXPORTS"
.IX Header "EXPORTS"
\&\fINone\fR.
.SH "KNOWN BUGS"
.IX Header "KNOWN BUGS"
\&\fINone\fR.
.SH "FEEDBACK"
.IX Header "FEEDBACK"
Patches, bug reports, suggestions or any other feedback is welcome.
.PP
Patches can be sent as GitHub pull requests at
<https://github.com/steve\-m\-hay/PerlIO\-via\-QuotedPrint/pulls>.
.PP
Bug reports and suggestions can be made on the \s-1CPAN\s0 Request Tracker at
<https://rt.cpan.org/Public/Bug/Report.html?Queue=PerlIO\-via\-QuotedPrint>.
.PP
Currently active requests on the \s-1CPAN\s0 Request Tracker can be viewed at
<https://rt.cpan.org/Public/Dist/Display.html?Status=Active;Queue=PerlIO\-via\-QuotedPrint>.
.PP
Please test this distribution.  See \s-1CPAN\s0 Testers Reports at
<https://www.cpantesters.org/> for details of how to get involved.
.PP
Previous test results on \s-1CPAN\s0 Testers Reports can be viewed at
<https://www.cpantesters.org/distro/P/PerlIO\-via\-QuotedPrint.html>.
.PP
Please rate this distribution on \s-1CPAN\s0 Ratings at
<https://cpanratings.perl.org/rate/?distribution=PerlIO\-via\-QuotedPrint>.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
PerlIO::via,
MIME::QuotedPrint.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Based on an example in the standard library module MIME::QuotedPrint in Perl
(version 5.8.0).
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
The latest version of this module is available from \s-1CPAN\s0 (see
\&\*(L"\s-1CPAN\*(R"\s0 in perlmodlib for details) at
.PP
<https://metacpan.org/release/PerlIO\-via\-QuotedPrint> or
.PP
<https://www.cpan.org/authors/id/S/SH/SHAY/> or
.PP
<https://www.cpan.org/modules/by\-module/PerlIO/>.
.PP
The latest source code is available from GitHub at
<https://github.com/steve\-m\-hay/PerlIO\-via\-QuotedPrint>.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
See the \fI\s-1INSTALL\s0\fR file.
.SH "AUTHOR"
.IX Header "AUTHOR"
Elizabeth Mattijsen <liz@dijkmat.nl <mailto:liz@dijkmat.nl>>.
.PP
Steve Hay <shay@cpan.org <mailto:shay@cpan.org>> is now maintaining
PerlIO::via::QuotedPrint as of version 0.08.
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 2002\-2004, 2012 Elizabeth Mattijsen.  All rights reserved.
.PP
Copyright (C) 2015, 2020 Steve Hay.  All rights reserved.
.SH "LICENCE"
.IX Header "LICENCE"
This module is free software; you can redistribute it and/or modify it under
the same terms as Perl itself, i.e. under the terms of either the \s-1GNU\s0 General
Public License or the Artistic License, as specified in the \fI\s-1LICENCE\s0\fR file.
.SH "VERSION"
.IX Header "VERSION"
Version 0.09
.SH "DATE"
.IX Header "DATE"
08 Dec 2020
.SH "HISTORY"
.IX Header "HISTORY"
See the \fIChanges\fR file.
