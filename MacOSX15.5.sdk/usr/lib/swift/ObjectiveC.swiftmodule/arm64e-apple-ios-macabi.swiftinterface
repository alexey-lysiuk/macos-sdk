// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64e-apple-ios18.5-macabi -enable-objc-interop -autolink-force-load -enable-library-evolution -module-link-name swiftObjectiveC -swift-version 6 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -user-module-version 940.4 -module-name ObjectiveC
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
@_exported import ObjectiveC
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@frozen public struct ObjCBool : Swift.ExpressibleByBooleanLiteral, Swift.Sendable {
  @usableFromInline
  internal var _value: Swift.Int8
  @_transparent public init(_ value: Swift.Bool) {
        self._value = value ? 1 : 0
    }
  @_transparent public var boolValue: Swift.Bool {
    @_transparent get {
        return _value != 0
    }
  }
  @_transparent public init(booleanLiteral value: Swift.Bool) {
        self.init(value)
    }
  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, macOS 10.0, *)
  public typealias BooleanLiteralType = Swift.Bool
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.ObjCBool : Swift.CustomReflectable {
  public var customMirror: Swift.Mirror {
    get
  }
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.ObjCBool : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@_transparent public func _convertBoolToObjCBool(_ x: Swift.Bool) -> ObjectiveC.ObjCBool {
    return ObjCBool(x)
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@_transparent public func _convertObjCBoolToBool(_ x: ObjectiveC.ObjCBool) -> Swift.Bool {
    return x.boolValue
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@frozen public struct Selector : Swift.ExpressibleByStringLiteral, @unchecked Swift.Sendable {
  internal var ptr: Swift.OpaquePointer
  public init(_ str: Swift.String)
  public init(stringLiteral value: Swift.String)
  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, macOS 10.0, *)
  public typealias ExtendedGraphemeClusterLiteralType = Swift.String
  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, macOS 10.0, *)
  public typealias StringLiteralType = Swift.String
  @available(iOS 1.0, tvOS 1.0, watchOS 1.0, macOS 10.0, *)
  public typealias UnicodeScalarLiteralType = Swift.String
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.Selector : Swift.Equatable, Swift.Hashable {
  public static func == (a: ObjectiveC.Selector, b: ObjectiveC.Selector) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.Selector : Swift.CustomStringConvertible {
  public var description: Swift.String {
    get
  }
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension Swift.String {
  public init(_sel: ObjectiveC.Selector)
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.Selector : Swift.CustomReflectable {
  public var customMirror: Swift.Mirror {
    get
  }
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@frozen public struct NSZone {
  internal var pointer: Swift.OpaquePointer
}
@available(*, unavailable)
extension ObjectiveC.NSZone : Swift.Sendable {
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@_silgen_name("_objc_autoreleasePoolPush")
public func _autoreleasePoolPush() -> Swift.UnsafeMutableRawPointer
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@_silgen_name("_objc_autoreleasePoolPop")
public func _autoreleasePoolPop(_: Swift.UnsafeMutableRawPointer)
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
@inline(__always) @_alwaysEmitIntoClient public func autoreleasepool<E, Result>(invoking body: () throws(E) -> Result) throws(E) -> Result where E : Swift.Error, Result : ~Copyable {
    let pool = _autoreleasePoolPush()
    defer {
        _autoreleasePoolPop(pool)
    }
    return try body()
}
@available(*, unavailable, message: "Use 'Bool' value 'true' instead")
public var YES: ObjectiveC.ObjCBool {
  get
}
@available(*, unavailable, message: "Use 'Bool' value 'false' instead")
public var NO: ObjectiveC.ObjCBool {
  get
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.NSObject : Swift.Equatable, Swift.Hashable {
  public static func == (lhs: ObjectiveC.NSObject, rhs: ObjectiveC.NSObject) -> Swift.Bool
  @nonobjc public var hashValue: Swift.Int {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public func _rawHashValue(seed: Swift.Int) -> Swift.Int
}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.NSObject : Swift.CVarArg {
  public var _cVarArgEncoding: [Swift.Int] {
    get
  }
}
@available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
public enum ObjCEnumerationImage {
  case dynamicClasses
  case image(Swift.UnsafeRawPointer)
  case machHeader(Swift.UnsafeRawPointer)
}
@available(*, unavailable)
extension ObjectiveC.ObjCEnumerationImage : Swift.Sendable {
}
@available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
public struct ObjCClassList : Swift.Sequence {
  public typealias Element = Swift.AnyClass
  @_hasMissingDesignatedInitializers public class Iterator : Swift.IteratorProtocol {
    @objc deinit
    public func next() -> Swift.AnyClass?
    @available(iOS 16.0, tvOS 16.0, watchOS 9.0, macOS 13.0, *)
    public typealias Element = Swift.AnyClass
  }
  public func makeIterator() -> ObjectiveC.ObjCClassList.Iterator
}
@available(*, unavailable)
extension ObjectiveC.ObjCClassList : Swift.Sendable {
}
@available(macOS 13.0, iOS 16.0, tvOS 16.0, watchOS 9.0, *)
public func objc_enumerateClasses(fromImage: ObjectiveC.ObjCEnumerationImage = .machHeader(#dsohandle), matchingNamePrefix: Swift.String? = nil, conformingTo: ObjectiveC.`Protocol`? = nil, subclassing: Swift.AnyClass? = nil) -> ObjectiveC.ObjCClassList
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.ObjCBool : Swift.BitwiseCopyable {}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.Selector : Swift.BitwiseCopyable {}
@available(macOS 10.0, iOS 1.0, tvOS 1.0, watchOS 1.0, *)
extension ObjectiveC.NSZone : Swift.BitwiseCopyable {}
