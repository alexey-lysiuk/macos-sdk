// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64e-apple-macos15.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 175.500.141 -module-name SharedWithYou
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
import AppKit
import Combine
import CoreTransferable
import Foundation
import OSLog
import SharedWithYou.SWCollaborationHighlight
import SharedWithYou.SWHighlightCenter
@_exported import SharedWithYou
import SharedWithYouCore
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
@available(iOS 16, macOS 13, *)
@available(tvOS, unavailable)
extension SharedWithYou.SWCollaborationView {
  @_Concurrency.MainActor @preconcurrency public func setDetailViewListContent<ListContent>(_ detailViewListContent: ListContent) where ListContent : SwiftUICore.View
  @_Concurrency.MainActor @preconcurrency public func setDetailViewListContent<ListContent>(@SwiftUICore.ViewBuilder _ detailViewListContent: () -> ListContent) where ListContent : SwiftUICore.View
}
extension SharedWithYou.SWCollaborationView {
  @available(macOS 13.1, *)
  @objc @_Concurrency.MainActor @preconcurrency dynamic public var menuFormRepresentation: AppKit.NSMenuItem {
    @objc get
  }
}
extension SharedWithYouCore.SWCollaborationMetadata : CoreTransferable.Transferable {
  public static var transferRepresentation: some CoreTransferable.TransferRepresentation {
    get
  }
  @available(macOS 13.0, *)
  public typealias Representation = @_opaqueReturnTypeOf("$sSo23SWCollaborationMetadataC13SharedWithYouE22transferRepresentationQrvpZ", 0) __
}
@available(iOS 16, tvOS 16, macOS 13, *)
extension SharedWithYou.SWHighlightCenter {
  public func collaborationHighlight(forIdentifier: Swift.String) throws -> SharedWithYou.SWCollaborationHighlight
}
@available(iOS 16, macOS 13, *)
@available(tvOS, unavailable)
@_Concurrency.MainActor @preconcurrency public struct _CollaborationDetailView<ListContent> : SwiftUICore.View where ListContent : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(itemProvider: Foundation.NSItemProvider, @SwiftUICore.ViewBuilder listContent: () -> ListContent)
  @_Concurrency.MainActor @preconcurrency public init(itemProvider: Foundation.NSItemProvider, contentTitle: Swift.String, collaborators: [SharedWithYouCore.SWPerson]?, @SwiftUICore.ViewBuilder listContent: () -> ListContent)
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 16, macOS 13, *)
  @available(tvOS, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s13SharedWithYou24_CollaborationDetailViewV4bodyQrvp", 0) __<ListContent>
}
@available(iOS 16, macOS 13, *)
@available(tvOS, unavailable)
extension SharedWithYou._CollaborationDetailView where ListContent == SwiftUICore.EmptyView {
  @_Concurrency.MainActor @preconcurrency public init(itemProvider: Foundation.NSItemProvider)
}
prefix operator >>
@available(iOS 16, macOS 13, *)
@available(tvOS, unavailable)
extension SharedWithYou._CollaborationDetailView : Swift.Sendable {}
