// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-macos15.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 300.16 -module-name _Translation_SwiftUI
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Foundation
import Swift
import SwiftUI
@_exported import Translation
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 17.4, macOS 14.4, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
@available(macCatalyst, unavailable)
extension View {
  nonisolated public func translationPresentation(isPresented: Binding<Bool>, text: String, attachmentAnchor: PopoverAttachmentAnchor = .rect(.bounds), arrowEdge: Edge = .top, replacementAction: ((String) -> Void)? = nil) -> some View
  
}
@available(iOS 18.0, macOS 15.0, *)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
@available(macCatalyst, unavailable)
extension View {
  nonisolated public func translationTask(_ configuration: TranslationSession.Configuration?, action: @escaping (_ session: TranslationSession) async -> Void) -> some View
  
  nonisolated public func translationTask(source: Locale.Language? = nil, target: Locale.Language? = nil, action: @escaping (_ session: TranslationSession) async -> Void) -> some View
  
}
