// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-macos15.5 -target-variant x86_64-apple-ios18.5-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 1656.120.6 -module-name _LocalAuthentication_SwiftUI
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
@_exported import LocalAuthentication
import LocalAuthenticationEmbeddedUI
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(macOS 13.0, *)
@available(macCatalyst, unavailable)
@available(iOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@_Concurrency.MainActor @preconcurrency public struct LocalAuthenticationView<Label> : SwiftUICore.View where Label : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(context: LocalAuthentication.LAContext, @SwiftUICore.ViewBuilder label: () -> Label)
  @_Concurrency.MainActor @preconcurrency public init(_ titleKey: SwiftUICore.LocalizedStringKey, context: LocalAuthentication.LAContext) where Label == SwiftUICore.Text
  @_disfavoredOverload @_Concurrency.MainActor @preconcurrency public init<S>(_ title: S, context: LocalAuthentication.LAContext) where Label == SwiftUICore.Text, S : Swift.StringProtocol
  @_Concurrency.MainActor @preconcurrency public init(reason: SwiftUICore.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void, @SwiftUICore.ViewBuilder label: () -> Label)
  @_Concurrency.MainActor @preconcurrency public init(_ title: SwiftUICore.Text, reason: SwiftUICore.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void) where Label == SwiftUICore.Text
  @_Concurrency.MainActor @preconcurrency public init(_ titleKey: SwiftUICore.LocalizedStringKey, reason: SwiftUICore.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void) where Label == SwiftUICore.Text
  @_disfavoredOverload @_Concurrency.MainActor @preconcurrency public init<S>(_ title: S, reason: SwiftUICore.Text, context: LocalAuthentication.LAContext? = nil, result: @escaping (Swift.Result<Swift.Void, any Swift.Error>) -> Swift.Void) where Label == SwiftUICore.Text, S : Swift.StringProtocol
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(macOS 13.0, *)
  @available(iOS, unavailable)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  @available(macCatalyst, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s28_LocalAuthentication_SwiftUI0aB4ViewV4bodyQrvp", 0) __<Label>
}
@available(macOS 13.0, *)
@available(macCatalyst, unavailable)
@available(iOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
extension _LocalAuthentication_SwiftUI.LocalAuthenticationView : Swift.Sendable {}
