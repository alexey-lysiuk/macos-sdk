// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target x86_64-apple-ios18.5-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 51.5.1 -module-name _SpriteKit_SwiftUI
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
@_exported import SpriteKit
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
@_Concurrency.MainActor @preconcurrency public struct SpriteView : SwiftUICore.View {
  @available(watchOS, unavailable)
  public struct Options : Swift.OptionSet, Swift.Sendable {
    public let rawValue: Swift.Int
    public init(rawValue: Swift.Int)
    public static let allowsTransparency: _SpriteKit_SwiftUI.SpriteView.Options
    public static let ignoresSiblingOrder: _SpriteKit_SwiftUI.SpriteView.Options
    public static let shouldCullNonVisibleNodes: _SpriteKit_SwiftUI.SpriteView.Options
    @available(iOS 14.0, tvOS 14.0, macOS 11.0, *)
    @available(watchOS, unavailable, introduced: 7.0)
    public typealias ArrayLiteralElement = _SpriteKit_SwiftUI.SpriteView.Options
    @available(iOS 14.0, tvOS 14.0, macOS 11.0, *)
    @available(watchOS, unavailable, introduced: 7.0)
    public typealias Element = _SpriteKit_SwiftUI.SpriteView.Options
    @available(iOS 14.0, tvOS 14.0, macOS 11.0, *)
    @available(watchOS, unavailable, introduced: 7.0)
    public typealias RawValue = Swift.Int
  }
  public struct DebugOptions : Swift.OptionSet, Swift.Sendable {
    public let rawValue: Swift.Int
    public init(rawValue: Swift.Int)
    public static let showsFPS: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    public static let showsDrawCount: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    public static let showsNodeCount: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    public static let showsQuadCount: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    public static let showsPhysics: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    public static let showsFields: _SpriteKit_SwiftUI.SpriteView.DebugOptions
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    public typealias ArrayLiteralElement = _SpriteKit_SwiftUI.SpriteView.DebugOptions
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    public typealias Element = _SpriteKit_SwiftUI.SpriteView.DebugOptions
    @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
    public typealias RawValue = Swift.Int
  }
  nonisolated public init(scene: SpriteKit.SKScene, transition: SpriteKit.SKTransition? = nil, isPaused: Swift.Bool = false, preferredFramesPerSecond: Swift.Int = 60)
  @available(watchOS, unavailable)
  @preconcurrency nonisolated public init(scene: SpriteKit.SKScene, transition: SpriteKit.SKTransition? = nil, isPaused: Swift.Bool = false, preferredFramesPerSecond: Swift.Int = 60, options: _SpriteKit_SwiftUI.SpriteView.Options = [.shouldCullNonVisibleNodes], shouldRender: @escaping @_Concurrency.MainActor (Foundation.TimeInterval) -> Swift.Bool = { _ in true })
  @available(iOS 15.0, macOS 12.0, tvOS 15.0, *)
  @available(watchOS, unavailable)
  @preconcurrency nonisolated public init(scene: SpriteKit.SKScene, transition: SpriteKit.SKTransition? = nil, isPaused: Swift.Bool = false, preferredFramesPerSecond: Swift.Int = 60, options: _SpriteKit_SwiftUI.SpriteView.Options = [.shouldCullNonVisibleNodes], debugOptions: _SpriteKit_SwiftUI.SpriteView.DebugOptions, shouldRender: @escaping @_Concurrency.MainActor (Foundation.TimeInterval) -> Swift.Bool = { _ in true })
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 14.0, tvOS 14.0, watchOS 7.0, macOS 11.0, *)
  public typealias Body = @_opaqueReturnTypeOf("$s18_SpriteKit_SwiftUI0A4ViewV4bodyQrvp", 0) __
}
@available(iOS 14.0, macOS 11.0, tvOS 14.0, watchOS 7.0, *)
extension _SpriteKit_SwiftUI.SpriteView : Swift.Sendable {}
