// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64e-apple-ios18.5-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -user-module-version 1389.600.1 -module-name ContactsUI
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Contacts.CNContact
import Contacts
@_exported import ContactsUI
import DeveloperToolsSupport
import Foundation
import Swift
import SwiftUI
import TipKit
import UIKit.UIColor
import UIKit.UIFont
import UIKit
import _AppIntents_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
extension Contacts.CNMutableContact {
  @available(iOS 16, *)
  @objc override dynamic public var id: Foundation.UUID {
    @objc get
  }
}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
@_Concurrency.MainActor @preconcurrency public struct ContactAccessButton : SwiftUICore.View {
  public enum Caption : Swift.String {
    case email
    case phone
    case defaultText
    public init?(rawValue: Swift.String)
    @available(iOS 18.0, *)
    @available(tvOS, unavailable)
    @available(watchOS, unavailable)
    @available(visionOS, unavailable)
    @available(macOS, unavailable)
    public typealias RawValue = Swift.String
    public var rawValue: Swift.String {
      get
    }
  }
  public struct Style {
    public static let automatic: ContactsUI.ContactAccessButton.Style
    public init(imageTrailingEdgePadding: CoreFoundation.CGFloat? = nil, imageWidth: CoreFoundation.CGFloat? = nil, imageColor: SwiftUICore.Color? = nil)
  }
  @_Concurrency.MainActor @preconcurrency public init(queryString query: Swift.String, ignoredEmails: Swift.Set<Swift.String>? = nil, ignoredPhoneNumbers: Swift.Set<Swift.String>? = nil, approvalCallback: (([Swift.String]) -> ())? = nil)
  @_Concurrency.MainActor public var body: some SwiftUICore.View {
    get
  }
  @available(iOS 18.0, *)
  @available(tvOS, unavailable)
  @available(watchOS, unavailable)
  @available(visionOS, unavailable)
  @available(macOS, unavailable)
  public typealias Body = @_opaqueReturnTypeOf("$s10ContactsUI19ContactAccessButtonV4bodyQrvp", 0) __
}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func contactAccessButtonStyle(_ style: ContactsUI.ContactAccessButton.Style) -> some SwiftUICore.View
  
}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public func contactAccessButtonCaption(_ caption: ContactsUI.ContactAccessButton.Caption) -> some SwiftUICore.View
  
}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension ContactsUI.ContactAccessButton : Swift.Sendable {}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension ContactsUI.ContactAccessButton.Caption : Swift.Equatable {}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension ContactsUI.ContactAccessButton.Caption : Swift.Hashable {}
@available(iOS 18.0, *)
@available(macOS, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension ContactsUI.ContactAccessButton.Caption : Swift.RawRepresentable {}
