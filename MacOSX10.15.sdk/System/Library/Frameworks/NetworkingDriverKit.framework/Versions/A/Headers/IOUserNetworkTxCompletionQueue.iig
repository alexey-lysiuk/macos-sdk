#ifndef _IOUSERNETWORKTXCOMPLETIONQUEUE_IIG
#define _IOUSERNETWORKTXCOMPLETIONQUEUE_IIG

#include <DriverKit/IODispatchQueue.iig>
#include <NetworkingDriverKit/IOUserNetworkPacketBufferPool.iig>
#include <NetworkingDriverKit/IOUserNetworkPacketQueue.iig>

/*!
@iig implementation
#if KERNEL
#include <NetworkingDriverKit/IOUserNetworkPacketQueue_kext.h>
#include <NetworkingDriverKit/IOUserNetworkPacketBufferPool_kext.h>
#include <NetworkingDriverKit/IOUserNetworkTxCompletionQueue_kext.h>
#endif
@iig end
*/

class KERNEL IOUserNetworkTxCompletionQueue : public IOUserNetworkPacketQueue
{
public:
    static kern_return_t
    Create(
        IOUserNetworkPacketBufferPool *         pool,
        OSObject *                          owner,
        uint32_t                            capacity,
        uint32_t                            queueId,
        IODispatchQueue *                   dispatchQueue,
        IOUserNetworkTxCompletionQueue **   queue) LOCAL;

    virtual bool
    init() override;

    virtual void
    free() override;

    virtual kern_return_t
    SetEnable(bool isEnable) LOCAL;
};

#endif /* ! _IOUSERNETWORKTXCOMPLETIONQUEUE_IIG */
